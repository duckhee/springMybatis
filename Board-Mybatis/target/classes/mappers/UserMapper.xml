<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  <!-- 
  Create User Table 
  	CREATE TABLE tbl_users (
  		id BIGINT(10) PRIMARY KEY AUTO_INCREMENT NOT NULL,
  		UserEmail VARCHAR(255) UNIQUE NOT NULL,
  		UserName VARCHAR(255) NOT NULL, 
  		UserPassword VARCHAR(255) NOT NULL,
  		createdAt DATETIME default NOW(),
  		updatedAt DATETIME default NOW()
  -->
<!-- session dao id -->  
<mapper namespace="kr.co.portfolio.mapper.user">
	<!-- Create User Role -->
	<insert id="roleCreate" parameterType="userRoleVO">
		INSERT INTO user_role_table (
			role, 
			user_table_idx
		) 
		VALUES(
			#{role},
			#{user_table_idx}
		)
	</insert>
	<!-- Create User -->
	<insert id="signupUser" useGeneratedKeys="true" keyProperty="idx"  parameterType="userVO">
		INSERT INTO 
		user_table (
			email,
			password,
			name
		) 
		VALUES (
			#{email},
			#{password},
			#{name}
		 )
	</insert>
	<!-- Check User -->
	<select id="checkUser" parameterType="string" resultType="userVO">
		<![CDATA[
			SELECT * FROM user_table  
			WHERE email=#{email} AND idx > 0
		]]>
	</select>
	<!-- Create User use selectKey  -->
	<insert id="insertUser" parameterType="userVO">
		<!-- Insert Before Get IDX -->
		<selectKey keyProperty="idx" order="BEFORE" resultType="int">
			SELECT MAX(idx) + 1 FROM user_table
		</selectKey>
		INSERT INTO 
		user_table (
			idx,
			email,
			password,
			name
		) VALUES(
			#{idx},
			#{email},
			#{password},
			#{name}
		)
	</insert>
	
	<!-- Count User -->
	<select id="countUser" parameterType="cri" resultType="int">
		<![CDATA[
		SELECT count(*) FROM user_table WHERE idx > 0
		]]>
	</select>
	<!-- Search User SQL -->
	<sql id="searchUser">
		<trim prefix="(" suffix=") AND " prefixOverrides="OR">
			<foreach item="type" collection="typeArr">
				<trim prefix="OR">
					<choose>
						<when test="type == 'T'.toString()">
							
						</when>
						<when test="type == 'R'.toString()">
						
						</when>
					</choose>
				</trim>
			</foreach>
		</trim>
	</sql>
	
	<!-- Paging User -->
	<select id="pagingUser" parameterType="cri" resultType="userVO">	
		<![CDATA[
		SELECT * FROM user_table  
		WHERE idx > 0 
		LIMIT #{amount} offset #{offset}
		]]> 
	</select>
	
	<!-- Modify User -->
	<update id="modifyUser" parameterType="userVO">
		<![CDATA[
			UPDATE user_table  
			SET email=#{email}, password=#{password}, name=#{name}, updatedAt=NOW() 
			WHERE idx=#{idx}
		]]>
	</update>
	<!-- Modify User Role -->
	<update id="modifyUserRole" parameterType="userRoleVO">
		<![CDATA[
			UPDATE user_role_table 
			SET role=#{role}, updatedAt=NOW() 
			WHERE user_table_idx = #{user_table_idx}
		]]>
	</update>
	
	<!-- Profile User -->
	<select id="profileUser" parameterType="userVO">
		SELECT email, name, createdAt, updatedAt  
		FROM cloud_user_table  
		WHERE email=#{email}
	</select>
	
	<!-- Login User ResultMap(USER) -->
	<resultMap type="userVO" id="loginUserMap">
		<id property="idx" column="uidx"/>
		<result property="email" column="uemail"/>
		<result property="name" column="uname"/>
		<result property="password" column="upassword"/>
		<result property="createdAt" column="ucreatedAt"/>
		<result property="updatedAt" column="uupdatedAt"/>
		<collection property="roles" resultMap="loginRoleMap"/>
	</resultMap>
	<!-- Login User ResultMap(ROLE) -->
	<resultMap type="userRoleVO" id="loginUserRoleMap">
		<id property="idx" column="ridx"/>
		<result property="role" column="rrole"/>
		<result property="createdAt" column="rcreatedAt"/>
		<result property="updatedAt" column="rupdatedAt"/>
	</resultMap>
	<!-- Login User -->
	<select id="loginUser" parameterType="string" resultType="userVO">
		<![CDATA[
			SELECT 
			u.idx as uidx, u.email as uemail, u.password as upassword, 
			u.name as uname, u.createdAt as ucreatedAt, u.updatedAt as uupdatedAt,
			r.idx as ridx, r.role as rrole, r.createdAt as rcreatedAt, r.updatedAt as rupdatedAt 
			FROM cloud_user_table as u LEFT OUTER JOIN cloud_user_role_table as r 
			ON  u.idx=r.user_table_idx 
			WHERE u.email=#{email} AND u.idx > 0 
		]]>
	</select>
	<!-- Delete User List resultMap(LIST) -->
	
	<!-- Delete User -->
	<delete id="deleteUser" parameterType="userVO">
		DELETE FROM cloud_user_table 
		WHERE idx = #{idx}
	</delete>
	
	<!-- User Get Roles -->
</mapper>